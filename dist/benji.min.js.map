{"version":3,"sources":["webpack://benji/webpack/universalModuleDefinition","webpack://benji/webpack/bootstrap","webpack://benji/./index.js","webpack://benji/./src/index.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","default","Method","freeze","GET","POST","PUT","PATCH","DELETE","HEAD","_","successCodes","createSuccess","Http","options","keys","forEach","prop","_callbacks","url","headers","fetch","method","body","request","baseURL","assign","baseHeaders","xhr","Promise","reject","Error","successCode","open","constructor","setRequestHeader","Array","isArray","JSON","stringify","onreadystatechange","readyState","res","parse","response","e","status","resolve","statusText","send","httpSession","then","_handleSuccess","catch","_handleError","cb","_applyCallback","onError","onSuccess","String","XMLHttpRequest"],"mappings":"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","file":"benji.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"benji\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"benji\"] = factory();\n\telse\n\t\troot[\"benji\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","module.exports = require('./src').default;\n","const Method = Object.freeze({\n  GET: 'GET',\n  POST: 'POST',\n  PUT: 'PUT',\n  PATCH: 'PATCH',\n  DELETE: 'DELETE',\n  HEAD: 'HEAD',\n  _: {\n    successCodes: {\n      GET: 200,\n      POST: 200,\n      PUT: 200,\n      PATCH: 200,\n      DELETE: 200\n    },\n    createSuccess: {\n      POST: 201,\n      PUT: 201,\n      PATCH: 201\n    }\n  }\n});\n\nconst httpSession = (xhr, request) => {\n  let { method, url, headers, body } = request;\n\n  if (!(method in Method)) {\n    return Promise.reject(new Error('Invalid method supplied.'));\n  }\n  const successCode = !body ? Method._.successCodes[method] : Method._.createSuccess[method];\n\n  xhr.open(method || Method.GET, url, true);\n  if (headers && headers.constructor === Object) {\n    for (let key in headers) {\n      if (Object.prototype.hasOwnProperty.call(headers, key)) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n  }\n\n  if (body) {\n    if (headers['Content-Type'] === 'application/x-www-form-urlencoded' && typeof body !== 'string') {\n      return Promise.reject(new Error('Invalid body format.'));\n    } else if (headers['Content-Type'] === 'application/json') {\n      if (body.constructor === Object || Array.isArray(body)) {\n        body = JSON.stringify(body);\n      } else if (typeof body !== 'string') {\n        return Promise.reject(new Error('Invalid body format.'));\n      }\n    }\n  }\n\n  xhr.onreadystatechange = () => {\n    if (xhr.readyState === 4) {\n      let res;\n\n      try {\n        res = JSON.parse(xhr.response);\n      } catch (e) {\n        return Promise.reject(e);\n      }\n\n      if (xhr.status === successCode) {\n        return Promise.resolve(res);\n      }\n\n      if (res) {\n        return Promise.reject(res);\n      }\n\n      return Promise.reject(xhr.statusText);\n    }\n  };\n\n  xhr.send(body);\n};\n\nclass Http {\n  /**\n   * Constructor Method\n   * @param {Object} options options to apply on initialization\n   */\n  constructor(options = {}) {\n    this._ = {};\n    Object.keys(options).forEach(prop => this._[prop] = options[prop]);\n    this._callbacks = {};\n  }\n\n  /**\n   * PROPERTIES\n   */\n\n  /**\n   * Base URL Getter\n   * @return {String} baseURL string\n   */\n  get baseURL() {\n    return !this._.baseURL ? '' : this._.baseURL;\n  }\n\n  /**\n   * Base URL Setter\n   * @param  {String} url string argument to set as baseURL property\n   */\n  set baseURL(url) {\n    if (url && url.constructor === String) {\n      this._.baseURL = url;\n    }\n  }\n\n  /**\n   * Base Headers Getter\n   * @return {{String : Sting}} baseHeaders object\n   */\n  get baseHeaders() {\n    return !this._.baseHeaders ? {} : this._.baseHeaders;\n  }\n\n  /**\n   * Base Headers Setter\n   * @param  {{String : Sting}} headers object argument to set as baseHeaders property\n   */\n  set baseHeaders(headers) {\n    if (headers && headers.constructor === Object) {\n      this._.baseHeaders = headers;\n    } else {\n      this._.baseHeaders = !this.baseHeaders ? {} : this.baseHeaders;\n    }\n  }\n\n  /**\n   * XMLHttpRequest Getter\n   * @return {XMLHttpRequest} XMLHttpRequest object to handle all HTTP request calls\n   */\n  get xhr() {\n    if (!this._.xhr) {\n      this._.xhr = new XMLHttpRequest();\n    }\n    return this._.xhr;\n  }\n\n  /**\n   * XMLHttpRequest Setter\n   * @param  {XMLHttpRequest} xhr XMLHttpRequest object to set as xhr property\n   */\n  set xhr(xhr) {\n    if (xhr && xhr.constructor === XMLHttpRequest) {\n      this._.xhr = xhr;\n    }\n  }\n\n  /**\n   * REQUEST METHODS\n   */\n\n  /**\n   * GET requester method\n   * @param  {String}             url     URI string to append to baseURL.\n   * @param  {{String : Sting}}   headers headers to append the baseHeaders\n   * @return {Promise}            promise object to be fulfilled in request\n   */\n  get(url, headers) {\n    return this.fetch({\n      method: Method.GET,\n      url: url,\n      headers: headers\n    });\n  }\n\n  /**\n   * POST requester method\n   * @param  {String}             url     URI string to append to baseURL.\n   * @param  {{String : Sting}}   headers headers to append the baseHeaders\n   * @param  {Any}                body    body to send in request\n   * @return {Promise}                    promise object to be fulfilled in request\n   */\n  post(url, headers, body) {\n    return this.fetch({\n      method: Method.POST,\n      url: url,\n      headers: headers,\n      body: body\n    });\n  }\n\n  /**\n   * PUT requester method\n   * @param  {String}             url     URI string to append to baseURL.\n   * @param  {{String : Sting}}   headers headers to append the baseHeaders\n   * @param  {Any}                body    body to send in request\n   * @return {Promise}                    promise object to be fulfilled in request\n   */\n  put(url, headers, body) {\n    return this.fetch({\n      method: Method.PUT,\n      url: url,\n      headers: headers,\n      body: body\n    });\n  }\n\n  /**\n   * PATCH requester method\n   * @param  {String}             url     URI string to append to baseURL.\n   * @param  {{String : Sting}}   headers headers to append the baseHeaders\n   * @param  {Any}                body    body to send in request\n   * @return {Promise}                    promise object to be fulfilled in request\n   */\n  patch(url, headers, body) {\n    return this.fetch({\n      method: Method.PATCH,\n      url: url,\n      headers: headers,\n      body: body\n    });\n  }\n\n  /**\n   * DELETE requester method\n   * @param  {String}             url     URI string to append to baseURL.\n   * @param  {{String : Sting}}   headers headers to append the baseHeaders\n   * @return {Promise}                    promise object to be fulfilled in request\n   */\n  delete(url, headers) {\n    return this.fetch({\n      method: Method.DELETE,\n      url: url,\n      headers: headers\n    });\n  }\n\n  /**\n   * FETCH requester method\n   * @param  {Object} request parameters for fetch request\n   * @return {Promise} promise object to be fulfilled in request\n   */\n  fetch(request) {\n    const { url, headers } = request;\n\n    request.url = `${this.baseURL}${url}`;\n    if (headers) {\n      request.headers = Object.assign(this.baseHeaders, headers);\n    }\n\n    httpSession(this.xhr, request)\n      .then(res => {\n        this._handleSuccess(res);\n        return Promise.resolve(res);\n      })\n      .catch(e => {\n        this._handleError(e);\n        return Promise.reject(e);\n      });\n  }\n\n  /**\n   * EVENT HANDLER METHODS\n   */\n\n  /**\n   * [onError description]\n   * @param  {Function} cb  Callback function that executes on request calls error\n   * @return {Http}        Current Http Object\n   */\n  onError(cb) {\n    return this._applyCallback('onError', cb);\n  }\n\n  /**\n   * [onSuccess description]\n   * @param  {Function} cb  Callback function that executes on request calls successes\n   * @return {Http}        Current Http Object\n   */\n  onSuccess(cb) {\n    return this._applyCallback('onSuccess', cb);\n  }\n\n  /**\n   * Internal Methods\n   * @param  {String} key  Name of listener\n   * @param  {Function} cb  Callback function that executes on request calls successes\n   * @return {Http}        Current Http Object\n   */\n  _applyCallback(key, cb) {\n    if (typeof cb === 'function') {\n      this._callbacks[key] = e => cb(e);\n    }\n\n    return this;\n  }\n\n  _handleError(e) {\n    const cb = this._callbacks.onError;\n\n    if (cb) {\n      return cb(e);\n    }\n  }\n\n  _handleSuccess(e) {\n    const cb = this._callbacks.onSuccess;\n\n    if (cb) {\n      return cb(e);\n    }\n  }\n}\n\nexport {\n  Http,\n  Method\n};\n"],"sourceRoot":""}